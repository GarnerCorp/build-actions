name: Prettier Action
description: Automatically runs prettier on all your changes.

author: 'GarnerCorp'

inputs:
  commit-message:
    description: Commit message, will be ignored if used with same-commit
    required: false
    default: "Prettified Code!"
  commit-description:
    description: Extended commit message, will be ignored if used with same-commit
    required: false
    default: ""
  same-commit:
    description: Update the current commit instead of creating a new one
    required: false
    default: "false"
  commit-options:
    description: Commit options
    required: false
  push-options:
    description: Git push options
    required: false
  file-pattern:
    description: File pattern used for `git add`, can't be used with only-changed!
    required: false
    default: "*"
  prettier-options:
    description: Options for the `prettier` command
    required: false
    default: "--write **/*.js"
  dry:
    description: Running the script in dry mode just shows whether there are files that should be prettified or not
    required: false
    default: "false"
  prettier-version:
    description: Version of prettier to use. Otherwise defaults to latest prettier version unless detect-prettier-version is specified. 
    required: false
    default: "false"
  working-directory:
    description: Specify a directory to cd into before installing prettier and running it
    required: false
    default: "false"
  only-changed:
    description: Only prettify files changed in the last commit, can't be used with file-pattern!
    required: false
    default: "false"
  prettier-plugins:
    description: Install Prettier plugins, i.e. `@prettier/plugin-php @prettier/plugin-other`
    required: false
    default: ""
  github-token:
    description: GitHub Token or PAT token used to authenticate against a repository
    required: false
    default: ${{ github.token }}
  push-to-remote:
    description: Whether or not to push prettified code to a remote
    required: false
    default: "true"
  checkout:
    description: Whether or not to checkout the repository you are currently working in
    required: false
    default: "true"
  detect-prettier-version:
    description: Whether or not to detect the prettier version from devDependencies
    required: false
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Clone repository
      uses: actions/checkout@v4
      working-directory: ${{ inputs.working-directory }}
      if: inputs.checkout == 'true'

    - name: Stub remote to suppress pushes
      if: inputs.push-to-remote != 'true'
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run:
        git remote rename origin github;
        git remote add origin .

    - name: Get prettier version from dependencies
      id: get-prettier-version
      if: inputs.detect-prettier-version == 'true'
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        prettier_version=$(jq -r '.devDependencies.prettier' package.json)
        echo "prettier_version=$prettier_version" >> $GITHUB_OUTPUT

    - name: Prettify code!
      shell: bash
      run: ${{ github.action-path }}/entrypoint.sh
      env:
        INPUT_COMMIT_MESSAGE: ${{ inputs.commit-message }}
        INPUT_COMMIT_DESCRIPTION: ${{ inputs.commit-description }}
        INPUT_SAME_COMMIT: ${{ inputs.same-commit }}
        INPUT_COMMIT_OPTIONS: ${{ inputs.commit-options }}
        INPUT_FILE_PATTERN: ${{ inputs.file-pattern }}
        INPUT_PRETTIER_OPTIONS: ${{ inputs.prettier-options }}
        INPUT_DRY: ${{ inputs.dry }}
        INPUT_PRETTIER_VERSION: ${{ steps.get-prettier-version.outputs.prettier_version || inputs.prettier-version }}
        INPUT_ONLY_CHANGED: ${{ inputs.only-changed }}
        INPUT_PRETTIER_PLUGINS: ${{ inputs.prettier-plugins }}
        INPUT_WORKING_DIRECTORY: ${{ inputs.working-directory }}
        INPUT_GITHUB_TOKEN: ${{ inputs.github-token }}

    - name: Check for changes
      if: inputs.push-to-remote != 'true'
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        if ! git diff $GITHUB_SHA..HEAD --exit-code > /dev/null; then
          git log $GITHUB_SHA..HEAD | cat
          exit 1
        fi

branding:
  icon: "award"
  color: "green"
